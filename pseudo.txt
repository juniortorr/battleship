Ship Class: 
    Constructor:
        - Length
        - Tracker for Hits 
        - Sunk (Boolean)
    hit():
        +1 on hit tracker 
        return hit tracker ex: 3/4?
    isSunk(): 
        if hit tracker is equal to length
            sunk: true;
            return hit tracker and sunk or afloat message;
        else 
            return how many times it's been hit

Gameboard Class: 
    Constructor: 
        - create board (arr (x, y coordinates))
        - missed attacks 
        - ships alive
    PlaceShip(coordinates, ship):
        loops over the ship length and changes the value of the coordinate to the ship;
    receiveAttack(coordinates)
        if this.board[y][x] is undefined
            +1 missed attacks  
            return no hit 
        else 
            if ship.hit() 
            if ship.isSunk() === true
                shipsAlive - 1
            else return hit;
Player Class:
    Constructor: 
        isTurn: true or false,
    setIsTurn() 
        change turn status 

Computer 
    selectRandomCoordinates()
        math.random for x
        math.random for y
        return x, y
    
        

    

        TOMORROW!!!!!
            
            - create a start over button 
            - fix slider bug that wont use animation.
            - change color of target confirmed and target missed
            - add scoreboard object



Place Ships / Drag & Drop Logic: 

    Current Process: 
        Randomly place ships to build board in the backend 
        create the board for each player
        show ships by adding the ship class to the board in the creation Process

    Goal Process: 
        Update the backend on Drop (placeShip) 
        Update the UI to match back end 
            Options: 
                1. Loop through every spot and rewrite the changed ones
                2. If statement depending on direction
                    - Manually select the corresponding divs that need updating?
                3. Change to a grid system so that you can use corresponding grid spots to stretch content;
                4. Screw linking them, they already work hand in hand with the recieve attack functions and data-sets
                    -Make the Ship slightly transparent and set the z index higher so that it floats 
                    - overlap over grid. when spot is hit, set index of spot to be higher

                